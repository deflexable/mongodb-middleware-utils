"use strict";var e=require("mongodb"),t=require("mongodb/lib/bson"),n=require("worker_threads"),r=require("url"),i=require("path"),a=require("./worker-BwM7ibXw.js"),o="undefined"!=typeof document?document.currentScript:null;const s="undefined"!=typeof __dirname?__dirname:i.dirname(r.fileURLToPath("undefined"==typeof document?require("url").pathToFileURL(__filename).href:o&&"SCRIPT"===o.tagName.toUpperCase()&&o.src||new URL("index.js",document.baseURI).href)),l="__fta_",c="__rdz";class u extends e.MongoClient{constructor({map:e,url:t,tokenizer:n,options:r}){super(t,r),this.interceptMap={map:e,tokenizer:n},f(super.db.bind(this),this.interceptMap)}get db(){return d(super.db.bind(this),this.interceptMap)}__intercepted=!0}const f=(e,t)=>{const{map:n,tokenizer:r}=t;if(void 0!==r&&"function"!=typeof r)throw`expected a function for field:"tokenizer" but got ${r}`;Object.entries(n).forEach((([t,n])=>{Object.entries(n).forEach((([n,i])=>{const o=`dbName(${t}), collectionName(${n})`,{fulltext:s,random:u,safeOverhead:f,overhead:d}=i||{};if(s)if(Array.isArray(s)){if(s.filter((e=>"string"!=typeof e||e.includes(".")||!e.trim())).length)throw`invalid interception value in ${o}, fulltext array must contain a non empty string without "." value but got ${JSON.stringify(s)}`;if(!s.length)throw`invalid interception value in ${o}, fulltext array must not be empty`;if(s.filter(((e,t,n)=>n.indexOf(e)===t)).length!==s.length)throw`invalid interception value in ${o}, fulltext array must not contain duplicate value but got ${s}`}else{if("string"!=typeof s||s.includes("."))throw`invalid interception value in ${o}, fulltext must either be a string without "." or array but got ${s}`;if(!s.trim())throw`invalid interception value in ${o}, fulltext must not be empty`}if(void 0!==u&&"boolean"!=typeof u)throw`invalid interception value in ${o}, random should be a boolean value but got ${i}`;if(f&&!d)throw'"safeOverhead" should only be true when "overhead" is true';if(d&&!a.Scope.listeningFulltext[o]&&(s||u)){a.Scope.listeningFulltext[o]=!0;const i=e(t).collection(n),d=i.watch(),p=s?Array.isArray(s)?s:[s]:[];console.log("listening overhead:",n),d.on("change",(async({operationType:e,fullDocument:t,updateDescription:n,documentKey:a})=>{if("delete"===e)return;const{_id:o}=a,d=t||await i.findOne({_id:o});if(!d)return;const m=s?"insert"===e?p.filter((e=>!d[`${l}${e}`])):Object.keys(n?.updatedFields||{}).filter((e=>p.includes(e))):[];if(m.length||u&&!d[c])if(console.log("overhead working"),f){const e=15728640-JSON.stringify({...d,...Object.fromEntries(m.map((e=>[e])))}).length;if(e>0){const t=await Promise.all(m.map((async e=>{const t=d[e],n="string"==typeof t&&await(r?.(t));return[e,await w(r?n:t)]}))),n=t.map((([e])=>[e,new Set([])]));let a,s=0;for(let r=0;r<t.length&&!a;r++)for(let i=0;i<t[r][1].length;i++){const o=t[r][1][i];if((a=s+=o.length+4)>=e)break;n[r][1].add(o)}i.updateOne({_id:o},{$set:{...Object.fromEntries(n.map((([e,t])=>[`${l}${e}`,[...t]])).filter((e=>e[1].length))),...d[c]?{}:{[c]:Math.random()}}})}else d[c]||i.updateOne({_id:o},{$set:{[c]:Math.random()}})}else{const e=await Promise.all(m.map((async e=>{const t=d[e],n="string"==typeof t&&await(r?.(t));return[`${l}${e}`,await w(r?n:t)]})));i.updateOne({_id:o},{$set:{...Object.fromEntries(e),...d[c]?{}:{[c]:Math.random()}}})}}))}}))}))},d=(e,t)=>function(){const{map:n,tokenizer:r}=t,i=e(...arguments),[a]=[...arguments];let o=function(){const e=[...arguments],t=i.collection(...e),o={},s=e[0];return Object.entries(n).forEach((([e,n])=>{Object.entries(n).forEach((([n,i])=>{const u={...i,tokenizer:r};if(a===e&&s===n&&(u?.fulltext||u?.random)){const{fulltext:e,random:n}=u,r=t=>{if(t?.$text?.$search&&e){const n=t.$text.$field||e,r=Array.isArray(n)?n:[n];if(r.filter(((e,t,n)=>n.indexOf(e)===t)).length!==r.length)throw"$field must not contain duplicate values";delete(t={...t,$or:[...t?.$or||[],...r.map((e=>({[`${l}${e}`]:{$in:[y(t?.$text?.$search)]}})))]}).$text}return t},i=e=>{const t=(Array.isArray(e)?e:[e]).map((e=>{if(!e)return e;const t={...e};return Object.keys(e).forEach((e=>{(e.startsWith(l)||e===c)&&delete t[e]})),t}));return Array.isArray(e)?t:t[0]},a=async t=>(g(t)&&((t={...t}).$set&&(t.$set=await h(t.$set,u)),t.$setOnInsert&&(t.$setOnInsert=await h(t.$setOnInsert,u)),t.$unset&&(Array.isArray(e)?e:[e]).forEach((e=>{t.$unset[e]&&(t.$unset[`${l}${e}`]=!0)}))),t);o.insertOne=async function(){return await t.insertOne(await h([...arguments][0],u),[...arguments][1])},o.insertMany=async function(){return await t.insertMany(await Promise.all([...arguments][0].map((e=>h(e,u)))),[...arguments][1])},["updateOne","updateMany"].forEach((e=>{o[e]=async function(){const n=[...arguments];return await t[e](r(n[0]),await a(n[1]),n[2])}})),o.replaceOne=async function(){return await t.replaceOne(r([...arguments][0]),await h([...arguments][1],u),[...arguments][2])},o.bulkWrite=async function(){let[e,...n]=[...arguments];return await t.bulkWrite(await Promise.all(e.map((async e=>{const t={};return await Promise.all(Object.entries(e).map((async([e,n])=>{t[e]={...n,...n.filter?{filter:r(n.filter)}:{},...n.arrayFilters?{}:{arrayFilters:n.arrayFilters.map(r)},...n.document?{document:await h(n.document,u)}:{},...n.replacement?{replacement:await h(n.replacement,u)}:{},...n.update?{update:await a(n.update)}:{}}}))),t}))),...n)},o.find=function(){let[e,...n]=[...arguments];const a=t.find(r(e),...n),o=a.toArray.bind(a);return a.toArray=async()=>i(await o()),a},o.findOne=async function(){let[e,...n]=[...arguments];const a=await t.findOne(r(e),...n);return i(a)},o.watch=function(){const[e,...n]=[...arguments],a=t.watch(Array.isArray(e)?e.map(r):r(e),...n),o={},s={};return["on","once","prependListener","addListener","prependOnceListener"].forEach((e=>{o[e]=(t,n)=>{if("change"===t){const t=`${Math.random()}`;return s[t]=e=>{const t=e;t.fullDocument&&(t.fullDocument=i(t.fullDocument)),t.fullDocumentBeforeChange&&(t.fullDocumentBeforeChange=i(t.fullDocumentBeforeChange)),t.updateDescription?.updatedFields&&(t.updateDescription.updatedFields=i(t.updateDescription.updatedFields)),n?.(t)},n.prototype||(n.prototype={}),n.prototype.__cloneMongodbListener||(n.prototype.__cloneMongodbListener=[]),n.prototype.__cloneMongodbListener.push(t),a[e]("change",s[t])}return a[e](t,n)}})),["off","removeListener"].forEach((e=>{o[e]=(t,n)=>{if("change"===t){const r=n.prototype?.__cloneMongodbListener;r&&(r.forEach((n=>{a[e](t,s[n]),s[n]&&delete s[n]})),delete n.prototype.__cloneMongodbListener)}else a[e](t,e)}})),new Proxy({},{get:(e,t)=>o[t]?o[t]:"function"==typeof a[t]?a[t].bind(a):a[t],set:(e,t,n)=>(o[t]?o[t]=n:a[t]=n,!0)})},o.aggregate=function(){const[e,a]=[...arguments],[o,s]=e,l=o?.$sample?.size,u=r(s?.$match),f=Number.isInteger(l)&&l>0&&n,d=t.aggregate(e.map((e=>e?.$match?{...e,$match:r(e.$match)}:e)),a),y=d.toArray.bind(d);d.toArray=async()=>i(await y());let h=async()=>{const[e,n]=await Promise.all(["asc","desc"].map((e=>t.find({...u},a).sort(c,e).limit(1).toArray()))),[r,o]=[e[0]?.[c],n[0]?.[c]].map((e=>e&&1*e));if(isNaN(r)||isNaN(o))return[];if(r===o)return i(e);{const e=l+0,n=(o-r)/e,s=[];let f=r;Array(e).fill().forEach((()=>{s.push(m(f+=n,f))}));const d=await Promise.all(s.map((e=>t.find({...u,[`${c}`]:{$gte:e}},a).sort(c,"asc").limit(3).toArray()))),y=p(d.flat().filter(((e,t,n)=>n.findIndex((t=>O.equal(t._id,e._id)))===t)));if(y.length>=l)return i(y.slice(0,l));{const e=await Promise.all(["asc","desc"].map((e=>t.find({...u},a).sort(c,e).limit(Math.ceil(l/2)).toArray()))),n=[...y,...p(e.flat().filter(((e,t,n)=>n.findIndex((t=>O.equal(t._id,e._id)))===t)))].filter(((e,t,n)=>n.findIndex((t=>O.equal(t._id,e._id)))===t));return i(n.slice(0,l))}}};return new Proxy({},{get:(e,t)=>"toArray"===t&&f?h:"function"==typeof d[t]?d[t].bind(d):d[t],set:(e,t,n)=>("toArray"===t&&f?h=n:d[t]=n,!0)})}}}))})),new Proxy({},{get:(e,n)=>o[n]?o[n]:"function"==typeof t[n]?t[n].bind(t):t[n],set:(e,n,r)=>(o[n]?o[n]=r:t[n]=r,!0)})};return new Proxy({},{get:(e,t)=>"collection"===t?o:"function"==typeof i[t]?i[t].bind(i):i[t],set:(e,t,n)=>("collection"===t?o=n:i[t]=n,!0)})},p=e=>{const t=[...e];let n,r=t.length;for(;0!=r;)n=Math.floor(Math.random()*r),r--,[t[r],t[n]]=[t[n],t[r]];return t},m=(e=70,t=0)=>(e-t)*Math.random()+t,y=e=>a.transformPunctuation(e.trim()),h=async(e,{fulltext:t,random:n,overhead:r,tokenizer:i})=>{if(r)return e;if(!g(e))return e;const a={...e};return t&&(t=Array.isArray(t)?t:[t],await Promise.all(t.map((async t=>{const n=e[t];if("string"==typeof n&&n.trim()&&!e[`${l}${t}`]){const e="string"==typeof n&&await(i?.(n));a[`${l}${t}`]=await w(i?e:n)}})))),n&&!e[c]&&(a[c]=Math.random()),a},g=e=>null!==e&&"object"==typeof e&&!Array.isArray(e),w=async e=>{if(!e?.trim?.())return[];const t=x(e),n=t.length>1?await Promise.all(t.map((e=>b(`${s}/worker.js`,{text:e})))):t.map((e=>({indexes:a.generateFulltextIndex(e)})));return[...new Set(n.map((e=>e.indexes)).flat())]},b=(e,t)=>new Promise((r=>{const i=new n.Worker(e);i.on("message",(e=>{r(e),i.terminate()})),i.postMessage(t)})),$=2e4,x=(e="")=>{e=e.split(" ");let t=[[]],n=0,r=0;for(let i=0;i<e.length;i++){const a=e[i];r+=a.length,++n<=2700&&r<$||!t[t.length-1].length?t[t.length-1].push(a):(t.push([a]),r=a.length,n=1)}const i=[];return t.forEach((e=>{e.length&&(e[0].length>$?Array(Math.ceil(e[0].length/$)).fill().forEach(((t,n)=>{i.push(e[0].substring(n*$,(n+1)*$))})):i.push(e.join(" ")))})),i},O={equal:(e,t,n)=>(e=A(e),t=A(t),v(t)||v(e)?_(e,t)&&JSON.stringify(e)===JSON.stringify(t):t instanceof RegExp?_(e,t)?e.source===t.source&&e.flags===t.flags:n&&"string"==typeof e&&t.test(e):JSON.stringify(e)===JSON.stringify(t))},_=(e,t)=>{try{return e.constructor===t.constructor&&Object.getPrototypeOf(e)===Object.getPrototypeOf(t)}catch(e){return!1}},A=e=>e instanceof t.BSONRegExp?new RegExp(e.pattern,e.options):[t.Long,t.Double,t.Int32,t.Decimal128].some((t=>e instanceof t))?1*e:e,v=e=>[t.Code,t.ObjectId,t.Binary,t.MaxKey,t.MinKey,t.UUID,t.Timestamp,t.BSONSymbol].some((t=>e instanceof t));exports.FULLTEXT_ARRAY_PREFIX=l,exports.MongoClientHack=u,exports.RANDOMIZER_FIELD=c,exports.getFulltextArray=w,exports.proxyClient=e=>t=>{if(t.__intercepted)throw"this MongoClient instance was previously intercepted";f(t.db.bind(t),e);const n=t.db.bind(t);t.db=d(n,e),t.__intercepted=!0};
